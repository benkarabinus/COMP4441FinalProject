plot_missing(DEN, title = "Denver",  group=c("No Missing Values"=0,
"PCT Missing Values"= 1))
# Phoenix
plot_missing(PHX, title = "Phoenix", group=c("No Missing Values"=0,
"PCT Missing Values"= 1))
# Salt Lake City
plot_missing(SLC, title = "Salt Lake City ", group=c("No Missing Values"=0,
"PCT Missing Values"= 1))
# replace missing values in ABQ
# replace NA's in the SNOW column with the median snowfall
ABQ$SNOW[is.na(ABQ$SNOW)] <- median(ABQ$SNOW, na.rm = T)
# replace the missing values for TAVG
ABQTEMP <- data.frame(ABQ$TMAX, ABQ$TMIN)
ind <- which(is.na(ABQ), arr.ind=TRUE)
# all temperatures are given as whole numbers in dataset so round the mean
ABQ[ind] <- ceiling(rowMeans(ABQTEMP, na.rm=TRUE)[ind[,1]])
#check to ensure replacement
profile_missing(ABQ)
# replace missing values in DEN
# remove NA's for precipitation
DEN$PRCP[is.na(DEN$PRCP)] <- median(DEN$PRCP, na.rm = TRUE)
# remove the NA's for SNOW
DEN$SNOW[is.na(DEN$SNOW)] <- median(DEN$SNOW, na.rm = TRUE)
# remove the NA's for TMAX
DEN$TMAX[is.na(DEN$TMAX)] <- median(DEN$TMAX, na.rm = TRUE)
# remove the NA's for TMIN
DEN$TMIN[is.na(DEN$TMIN)] <- median(DEN$TMIN, na.rm = TRUE)
# replace the missing values for TAVG
DENTEMP <- data.frame(DEN$TMAX, DEN$TMIN)
ind <- which(is.na(DEN), arr.ind=TRUE)
# all temperatures are given as whole numbers in dataset so round the mean
DEN[ind] <- ceiling(rowMeans(DENTEMP, na.rm=TRUE)[ind[,1]])
#check to ensure replacement
#profile_missing(DEN)
# replace missing values in PHX
# remove the NA's for SNOW
PHX$SNOW[is.na(PHX$SNOW)] <- median(PHX$SNOW,na.rm = TRUE)
# replace the missing values for TAVG
PHXTEMP <- data.frame(PHX$TMAX, PHX$TMIN)
ind <- which(is.na(PHX), arr.ind=TRUE)
# all temperatures are given as whole numbers in dataset so round the mean
PHX[ind] <- ceiling(rowMeans(PHXTEMP, na.rm=TRUE)[ind[,1]])
#check to ensure replacement
#profile_missing(PHX)
# replace missing values in SLC
# remove the NA's for SNOW
SLC$SNOW[is.na(SLC$SNOW)] <- median(SLC$SNOW,na.rm = TRUE)
# replace the missing values for TAVG
SLCTEMP <- data.frame(SLC$TMAX, SLC$TMIN)
ind <- which(is.na(SLC), arr.ind=TRUE)
SLC[ind] <- ceiling(rowMeans(SLCTEMP, na.rm=TRUE)[ind[,1]])
#check to ensure replacement
#profile_missing(SLC)
# transform date column from factor to date data type in each data set
ABQ <- transform(ABQ, DATE = as.Date(DATE))
DEN <- transform(DEN, DATE = as.Date(DATE))
PHX <- transform(PHX, DATE = as.Date(DATE))
SLC <- transform(SLC, DATE = as.Date(DATE))
#verify changes
ABQ_DELTA <- sapply(ABQ, class)
DEN_DELTA <- sapply(DEN, class)
PHX_DELTA <- sapply(PHX, class)
SLC_DELTA <- sapply(SLC, class)
ABQ_DELTA
#DEN_DELTA
#PHX_DELTA
#SLC_DELTA
# Albuquerque
# create column month year to aggregate data for time series
ABQ$MONTH_YEAR <- floor_date(ABQ$DATE,"month")
# create aggregated dataset using MONTH_YEAR COLUMN
ABQ_AGG <- ABQ %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(Monthly_Avg_Temp = mean(TAVG),
Monthly_Rainfall=sum(PRCP), Monthly_Snowfall=sum(SNOW)) %>%
as.data.frame()
head(ABQ_AGG)
# Denver
# create column month year to aggregate data for time series
DEN$MONTH_YEAR <- floor_date(DEN$DATE,"month")
# create aggregated dataset using MONTH_YEAR COLUMN
# This aggeregate will be used to create the time series
DEN_AGG <- DEN %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(Monthly_Avg_Temp = mean(TAVG),
Monthly_Rainfall=sum(PRCP), Monthly_Snowfall=sum(SNOW)) %>%
as.data.frame()
# Phoenix
# create column month year to aggregate data for time series
PHX$MONTH_YEAR <- floor_date(PHX$DATE,"month")
# create aggregated dataset using MONTH_YEAR COLUMN
PHX_AGG <- PHX %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(Monthly_Avg_Temp = mean(TAVG),
Monthly_Rainfall=sum(PRCP), Monthly_Snowfall=sum(SNOW)) %>%
as.data.frame()
# Salt Lake City
# create column month year to aggregate data for time series
SLC$MONTH_YEAR <- floor_date(SLC$DATE,"month")
# create aggregated dataset using MONTH_YEAR COLUMN
SLC_AGG <- SLC %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(Monthly_Avg_Temp = mean(TAVG),
Monthly_Rainfall=sum(PRCP), Monthly_Snowfall=sum(SNOW)) %>%
as.data.frame()
# create time series objects for mean monthly temperature
ABQ_TS_TEMP <- ts(ABQ_AGG[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
DEN_TS_TEMP <- ts(DEN_AGG[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
PHX_TS_TEMP <- ts(PHX_AGG[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
SLC_TS_TEMP <- ts(SLC_AGG[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
# create time series objects for total monthly precipitation
ABQ_TS_PRCP <- ts(ABQ_AGG[, 3], start=c(1970, 1), end=c(2019,12), frequency=12)
DEN_TS_PRCP <- ts(DEN_AGG[, 3], start=c(1970, 1), end=c(2019,12), frequency=12)
PHX_TS_PRCP <- ts(PHX_AGG[, 3], start=c(1970, 1), end=c(2019,12), frequency=12)
SLC_TS_PRCP <- ts(SLC_AGG[, 3], start=c(1970, 1), end=c(2019,12), frequency=12)
# create time series objects for total monthly snowfall
ABQ_TS_SNOW <- ts(ABQ_AGG[, 4], start=c(1970,1), end=c(2019,12), frequency=12)
DEN_TS_SNOW <- ts(DEN_AGG[, 4], start=c(1970,1), end=c(2019,12), frequency=12)
PHX_TS_SNOW <- ts(PHX_AGG[, 4], start=c(1970,1), end=c(2019,12), frequency=12)
SLC_TS_SNOW <- ts(SLC_AGG[, 4], start=c(1970,1), end=c(2019,12), frequency=12)
# perform the ADF test for ABQ
adf.test(ABQ_TS_TEMP)
# Perform the ADF test for remaining time series objects
#adf.test(ABQ_TS_PRCP)
#adf.test(ABQ_TS_SNOW)
#adf.test(DEN_TS_TEMP)
#adf.test(DEN_TS_PRCP)
#adf.test(DEN_TS_SNOW)
#adf.test(PHX_TS_TEMP)
#adf.test(PHX_TS_PRCP)
#adf.test(PHX_TS_SNOW)
#adf.test(SLC_TS_TEMP)
#adf.test(SLC_TS_PRCP)
#adf.test(SLC_TS_SNOW)
# plot the time series data for Albuquerque (birds eye view)
par(mfrow=c(3,1))
plot(ABQ_TS_TEMP)
plot(ABQ_TS_PRCP)
plot(ABQ_TS_SNOW)
# shorten the time span and customize the plot (close up view)
ABQ_TS_TEMP_SHORT <- ts(ABQ_AGG[, 2], start= c(2010,1), end= c(2019,12), frequency = 12)
ABQ_TEMP_PLT <- ts_plot(ABQ_TS_TEMP_SHORT, title = "Mean Monthly Temperature Albuqurque, NM",                           Xtitle = "Time",
Ytitle="Temperature (F)",
color="#ff0000",
Xgrid=TRUE,
Ygrid=TRUE,) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
ABQ_TS_PRCP_SHORT <- ts(ABQ_AGG[, 3], start= c(2010,1), end= c(2019,12), frequency = 12)
ABQ_PRCP_PLT <- ts_plot(ABQ_TS_PRCP_SHORT, title = "Monthly Rainfall Albuquerque, NM", Xtitle = "Time",
Ytitle="Total Montlhy Rainfall (inches)",
color="#07d870",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
ABQ_TS_SNOW_SHORT <- ts(ABQ_AGG[, 4], start= c(2010,1), end= c(2019,12), frequency = 12)
ABQ_SNOW_PLT <- ts_plot(ABQ_TS_SNOW_SHORT, title = "Monthly Snowfall Albuquerque, NM",
Xtitle ="Time",
Ytitle="Total Montlhy Snowfall (inches)",
color="#4982ff",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="white",
zeroline=TRUE,
zerolinecolor="white",
gridcolor="white"))
par(mfrow=c(3,1))
ABQ_SNOW_PLT
ABQ_PRCP_PLT
ABQ_TEMP_PLT
ts_decompose(ABQ_TS_TEMP_SHORT)
ts_decompose(ABQ_TS_PRCP_SHORT)
ts_decompose(ABQ_TS_SNOW_SHORT)
# plot the time series data for Denver (birds eye view)
par(mfrow=c(3,1))
plot(DEN_TS_TEMP)
plot(DEN_TS_PRCP)
plot(DEN_TS_SNOW)
# shorten the time span and customize the plot (close up view)
DEN_TS_TEMP_SHORT <- ts(DEN_AGG[, 2], start= c(2010,1), end= c(2019,12), frequency = 12)
DEN_TEMP_PLT <- ts_plot(DEN_TS_TEMP_SHORT, title = "Mean Monthly Temperature Denver, CO",                               Xtitle = "Time",
Ytitle="Temperature (F)",
color="#ff0000",
Xgrid=TRUE,
Ygrid=TRUE,) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
DEN_TS_PRCP_SHORT <- ts(DEN_AGG[, 3], start= c(2010,1), end= c(2019,12), frequency = 12)
DEN_PRCP_PLT <- ts_plot(DEN_TS_PRCP_SHORT, title = "Monthly Rainfall Denver, CO",                                    Xtitle = "Time",
Ytitle="Total Montlhy Rainfall (inches)",
color="#07d870",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
DEN_TS_SNOW_SHORT <- ts(DEN_AGG[, 4], start= c(2010,1), end= c(2019,12), frequency = 12)
DEN_SNOW_PLT <- ts_plot(DEN_TS_SNOW_SHORT, title = "Monthly Snowfall Denver, CO",
Xtitle ="Time",
Ytitle="Total Montlhy Snowfall (inches)",
color="#4982ff",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="white",
zeroline=TRUE,
zerolinecolor="white",
gridcolor="white"))
par(mfrow=c(3,1))
DEN_SNOW_PLT
DEN_PRCP_PLT
DEN_TEMP_PLT
par(mfrow=c(1,3))
ts_decompose(DEN_TS_TEMP_SHORT)
ts_decompose(DEN_TS_PRCP_SHORT)
ts_decompose(DEN_TS_SNOW_SHORT)
# plot the time series data for Phoenix (birds eye view)
par(mfrow=c(3,1))
plot(PHX_TS_TEMP)
plot(PHX_TS_PRCP)
plot(PHX_TS_SNOW)
# shorten the time span and customize the plot (close up view)
PHX_TS_TEMP_SHORT <- ts(PHX_AGG[, 2], start= c(2010,1), end= c(2019,12), frequency = 12)
PHX_TEMP_PLT <- ts_plot(PHX_TS_TEMP_SHORT, title = "Mean Monthly Temperature Phoenix, AZ",                               Xtitle = "Time",
Ytitle="Temperature (F)",
color="#ff0000",
Xgrid=TRUE,
Ygrid=TRUE,) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
PHX_TS_PRCP_SHORT <- ts(PHX_AGG[, 3], start= c(2010,1), end= c(2019,12), frequency = 12)
PHX_PRCP_PLT <- ts_plot(PHX_TS_PRCP_SHORT, title = "Monthly Rainfall Phoenix, AZ",                                   Xtitle = "Time",
Ytitle="Total Montlhy Rainfall (inches)",
color="#07d870",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
PHX_TS_SNOW_SHORT <- ts(PHX_AGG[, 4], start= c(2010,1), end= c(2019,12), frequency = 12)
PHX_SNOW_PLT <- ts_plot(PHX_TS_SNOW_SHORT, title = "Monthly Snowfall Phoenix, AZ",
Xtitle ="Time",
Ytitle="Total Montlhy Snowfall (inches)",
color="#4982ff",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="white",
zeroline=TRUE,
zerolinecolor="white",
gridcolor="white"))
par(mfrow=c(3,1))
PHX_SNOW_PLT
PHX_PRCP_PLT
PHX_TEMP_PLT
ts_decompose(PHX_TS_TEMP_SHORT)
ts_decompose(PHX_TS_PRCP_SHORT)
ts_decompose(PHX_TS_SNOW_SHORT)
# plot the time series data for Salt Lake City (birds eye view)
par(mfrow=c(3,1))
plot(SLC_TS_TEMP)
plot(SLC_TS_PRCP)
plot(SLC_TS_SNOW)
# shorten the time span and customize the plot (close up view)
SLC_TS_TEMP_SHORT <- ts(SLC_AGG[, 2], start= c(2010,1), end= c(2019,12), frequency = 12)
SLC_TEMP_PLT <- ts_plot(SLC_TS_TEMP_SHORT, title ="Mean Monthly Temperature Salt Lake City, UT",                         Xtitle = "Time",
Ytitle="Temperature (F)",
color="#ff0000",
Xgrid=TRUE,
Ygrid=TRUE,) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
SLC_TS_PRCP_SHORT <- ts(SLC_AGG[, 3], start= c(2010,1), end= c(2019,12), frequency = 12)
SLC_PRCP_PLT <- ts_plot(SLC_TS_PRCP_SHORT, title = "Monthly Rainfall Salt Lake City, UT",                            Xtitle = "Time",
Ytitle="Total Montlhy Rainfall (inches)",
color="#07d870",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="White",
zerolinecolor="White",
gridcolor="White"))
SLC_TS_SNOW_SHORT <- ts(SLC_AGG[, 4], start= c(2010,1), end= c(2019,12), frequency = 12)
SLC_SNOW_PLT <- ts_plot(SLC_TS_SNOW_SHORT, title = "Monthly Snowfall Salt Lake City, UT",
Xtitle ="Time",
Ytitle="Total Montlhy Snowfall (inches)",
color="#4982ff",
Xgrid=TRUE,
Ygrid=TRUE) %>%
layout(paper_bgcolor="black",
plot_bgcolor="black",
font=list(color="white"),
yaxis=list(linecolor="white",
zerolinecolor="white",
gridcolor="white"),
xaxis=list(linecolor="white",
zeroline=TRUE,
zerolinecolor="white",
gridcolor="white"))
par(mfrow=c(3,1))
SLC_SNOW_PLT
SLC_PRCP_PLT
SLC_TEMP_PLT
ts_decompose(SLC_TS_TEMP_SHORT)
ts_decompose(SLC_TS_PRCP_SHORT)
ts_decompose(SLC_TS_SNOW_SHORT)
# SARIMA model(s) for Albuquerque
ABQ_TEMP_MODEL <- auto.arima(ABQ_TS_TEMP, stepwise = FALSE)
ABQ_PRCP_MODEL <- auto.arima(ABQ_TS_PRCP, stepwise = FALSE)
ABQ_SNOW_MODEL <- auto.arima(ABQ_TS_SNOW, stepwise = FALSE)
# summary of ABQ_TEMP_MODEL
ABQ_TEMP_MODEL
# forecast using the ABQ_TEMP_MODEL
ABQ_TEMP_CAST <- forecast(ABQ_TEMP_MODEL, h=60)
plt <- plot_forecast(ABQ_TEMP_CAST, title = "Five Year Forecast",
Ytitle = "Mean Monthly Temperature",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
# summary of ABQ_PRCP_MODEL
ABQ_PRCP_MODEL
# forecast using the ABQ_PRCP_MODEL
ABQ_PRCP_CAST <- forecast(ABQ_PRCP_MODEL, h=60)
ABQ_PRCP_CAST
ABQ_PRCP_CAST$lower<-apply(ABQ_PRCP_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(ABQ_PRCP_CAST, title = "Five Year Forecast",
Ytitle = "Total Monthly Precipitation",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
# summary of ABQ_SNOW_MODEL
ABQ_SNOW_MODEL
ABQ_SNOW_CAST <- forecast(ABQ_SNOW_MODEL, h=60)
ABQ_SNOW_CAST
ABQ_SNOW_CAST$lower<-apply(ABQ_PRCP_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(ABQ_SNOW_CAST, title = "Five Year Forecast",
Ytitle = "Total Monthly Snowfall",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
# SARIMA model(s) for Denver
DEN_TEMP_MODEL <- auto.arima(DEN_TS_TEMP, stepwise = FALSE)
DEN_PRCP_MODEL <- auto.arima(DEN_TS_PRCP, stepwise = FALSE)
DEN_SNOW_MODEL <- auto.arima(DEN_TS_SNOW, stepwise = FALSE)
# summary of DEN_TEMP_MODEL
DEN_TEMP_MODEL
# forecast using the DEN_TEMP_MODEL
DEN_TEMP_CAST <- forecast(ABQ_TEMP_MODEL, h=60)
DEN_TEMP_CAST
plt <- plot_forecast(DEN_TEMP_CAST, title = "Five Year Forecast",
Ytitle = "Mean Monthly Temperature",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
# summary of DEN_PRCP_MODEL
DEN_PRCP_MODEL
# forecast using the DEN_PRCP_MODEL
DEN_PRCP_CAST <- forecast(ABQ_PRCP_MODEL, h=60)
DEN_PRCP_CAST
DEN_PRCP_CAST$lower<-apply(DEN_PRCP_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(ABQ_PRCP_CAST, title = "Five Year Forecast",
Ytitle = "Total Monthly Precipitation",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
# summary of DEN_SNOW_MODEL
summary(DEN_SNOW_MODEL)
# forecast using the DEN_SNOW_MODEL
DEN_SNOW_CAST <- forecast(DEN_SNOW_MODEL, h=60)
DEN_SNOW_CAST
DEN_SNOW_CAST$lower<-apply(DEN_SNOW_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(ABQ_PRCP_CAST, title = "Five Year Forecast",
Ytitle = "Total Monthly Snowfall",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
# SARIMA model(s) for Phoenix
PHX_TEMP_MODEL <- auto.arima(PHX_TS_TEMP, stepwise = FALSE)
PHX_PRCP_MODEL <- auto.arima(PHX_TS_PRCP, stepwise = FALSE)
PHX_SNOW_MODEL <- auto.arima(PHX_TS_SNOW, stepwise = FALSE)
summary(PHX_TEMP_MODEL)
# forecast using the PHX_TEMP_MODEL
PHX_TEMP_CAST <- forecast(PHX_TEMP_MODEL, h=60)
PHX_TEMP_CAST
plt <- plot_forecast(PHX_TEMP_CAST, title = "Five Year Forecast",
Ytitle = "Mean Monthly Temperature",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
summary(PHX_PRCP_MODEL)
# forecast using the PHX_PRCP_MODEL
PHX_PRCP_CAST <- forecast(PHX_PRCP_MODEL, h=60)
PHX_PRCP_CAST
PHX_PRCP_CAST$lower<-apply(PHX_PRCP_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(PHX_PRCP_CAST, title = "Five Year Forecast",
Ytitle = "Total Montly Precipitation",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
SLC_TEMP_MODEL <- auto.arima(SLC_TS_TEMP, stepwise = FALSE)
SLC_PRCP_MODEL <- auto.arima(SLC_TS_PRCP, stepwise = FALSE)
SLC_SNOW_MODEL <- auto.arima(SLC_TS_SNOW, stepwise = FALSE)
summary(SLC_TEMP_MODEL)
# forecast using the SLC_TEMP_MODEL
SLC_TEMP_CAST <- forecast(SLC_TEMP_MODEL, h=60)
SLC_TEMP_CAST
SLC_TEMP_CAST$lower<-apply(SLC_TEMP_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(SLC_TEMP_CAST, title = "Five Year Forecast",
Ytitle = "Mean Monthly Temperature",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
summary(SLC_PRCP_MODEL)
# forecast using the SLC_PRCP_MODEL
SLC_PRCP_CAST <- forecast(SLC_PRCP_MODEL, h=60)
SLC_PRCP_CAST
SLC_PRCP_CAST$lower<-apply(SLC_PRCP_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(SLC_PRCP_CAST, title = "Five Year Forecast",
Ytitle = "Total Montly Precipitation",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
summary(SLC_SNOW_MODEL)
# forecast using the SLC_SNOW_MODEL
SLC_SNOW_CAST <- forecast(SLC_SNOW_MODEL, h=60)
SLC_SNOW_CAST
SLC_SNOW_CAST$lower<-apply(SLC_SNOW_CAST$lower, 2, function(x) ifelse(x < 0,0, x))
plt <- plot_forecast(SLC_SNOW_CAST, title = "Five Year Forecast",
Ytitle = "Total Montly Snowfall",
Xtitle = "Time") %>% layout(
xaxis = list(range=c(2015, 2024))
)
plt
