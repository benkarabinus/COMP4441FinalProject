ggqqplot(rgamma(100,shp,scl))
# qs=qnorm(c(0.05,0.995),mu-1,sig/sqrt(50))
# pgamma(qs[1],mu,sig/sqrt(50))+pgamma(qs[2],mu,sig/sqrt(50),
#                                    lower.tail = F)
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples=colMeans(samples)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
#
# z.p.val<-function(a=shp,s=scl){
#   samp<-rgamma(n,shape=a,scale=s)
#   return(2*pnorm(-abs((mean(samp)-(mu-1))/(sig/sqrt(n)))))
# }
# set.seed(1234567)
# ps<-replicate(1e5,z.p.val())
# mean(ps<.01)
#
# z.p.val()
# n
#
# ps<.01
#
# mean(c(TRUE, 5, FALSE))
dat.plot<-data.frame(x=c(0,3*mu))
ggplot(data=dat.plot,aes(x=x))+
stat_function(fun=dgamma, args=list(shape=shp,scale=scl))
ggqqplot(rgamma(100,shp,scl))
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(((meansamples2<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
plot(mean(samples2))
mean(samples2)
2sqrt(2)
2*sqrt(2)
mean(samples2)
mean(samples2)
2*sqrt(2)
sqrt(2)
mean(samples2)
sqrt(2)
mean(samples2)
sqrt(2)
dat.plot<-data.frame(x=c(0,3*mu))
ggplot(data=dat.plot,aes(x=x))+
stat_function(fun=dgamma, args=list(shape=shp,scale=scl))
ggqqplot(rgamma(100,shp,scl))
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(samples2)
sqrt(2)
mean(((meansamples2<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
(mu-1)
dat.plot<-data.frame(x=c(0,3*mu))
ggplot(data=dat.plot,aes(x=x))+
stat_function(fun=dgamma, args=list(shape=shp,scale=scl))
ggqqplot(rgamma(100,shp,scl))
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(samples2)
sqrt(2)
(mu-1)
mean(((meansamples2<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig)))
round(5.12345,1)
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
z.p.val.round<-function(a=shp,s=scl){
samp<-round(rnorm(n,mu,sig),1)
return(2*pnorm(-abs((mean(samp)-mu-1)/(sig/sqrt(n)))))
}
ps.round<-replicate(100000,z.p.val.round())
mean(ps.round<.05)
round(0.25)
round(0.51)
round(0.501)
round(5.12345,1)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig)),1)
ggqqplot(round(rnorm(n,mu,sig)),1)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig)))
round(5.12345,1)
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
z.p.val.round<-function(a=shp,s=scl){
samp<-round(rnorm(n,mu,sig),1)
return(2*pnorm(-abs((mean(samp)-mu-1)/(sig/sqrt(n)))))
}
ps.round<-replicate(100000,z.p.val.round())
mean(ps.round<.05)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples=colMeans(samples3)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples=colMeans(samples3)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples=colMeans(samples3)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-2000
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples=colMeans(samples3)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-500
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples=colMeans(samples3)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-500
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(500,mu,sig),1))
meansamples=colMeans(samples3)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
dat.plot<-data.frame(x=c(0,3*mu))
ggplot(data=dat.plot,aes(x=x))+
stat_function(fun=dgamma, args=list(shape=shp,scale=scl))
ggqqplot(rgamma(500,shp,scl))
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(samples2)
sqrt(2)
(mu-1)
mean(((meansamples2<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
dat.plot<-data.frame(x=c(0,3*mu))
ggplot(data=dat.plot,aes(x=x))+
stat_function(fun=dgamma, args=list(shape=shp,scale=scl))
ggqqplot(rgamma(100,shp,scl))
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(samples2)
sqrt(2)
(mu-1)
mean(((meansamples2<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
set.seed(123456)
z.p.val.round.true<-function(a=shp,s=scl){
samp<-round(rnorm(n,mu,sig),1)
return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
}
ps.round.true<-replicate(100000,z.p.val.round.true())
mean(ps.round.true<.01)
z.p.val.true<-function(a=shp,s=scl){
samp<-rgamma(n,shape=a,scale=s)
return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
}
set.seed(1234567)
ps.true<-replicate(100000,z.p.val.true())
mean(ps.true<.05)
set.seed(123456)
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(samples2)
sqrt(2)
(mu)
mean(((meansamples2<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu,sig/sqrt(50))))>0)
# z.p.val.round.true<-function(a=shp,s=scl){
#   samp<-round(rnorm(n,mu,sig),1)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
#
# ps.round.true<-replicate(100000,z.p.val.round.true())
# mean(ps.round.true<.01)
set.seed(123456)
samples4<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples4<-colMeans(samples4)
mean(((meansamples4<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples4>qnorm(0.995,mu,sig/sqrt(50))))>0)
# z.p.val.round.true<-function(a=shp,s=scl){
#   samp<-round(rnorm(n,mu,sig),1)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
#
# ps.round.true<-replicate(100000,z.p.val.round.true())
# mean(ps.round.true<.01)
# z.p.val.true<-function(a=shp,s=scl){
#   samp<-rgamma(n,shape=a,scale=s)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
# set.seed(1234567)
# ps.true<-replicate(100000,z.p.val.true())
# mean(ps.true<.05)
samples4<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples4<-colMeans(samples4)
mean(((meansamples4<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples4>qnorm(0.995,mu,sig/sqrt(50))))>0)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples3<-colMeans(samples3)
mean(((meansamples3<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples3>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
set.seed(123456)
samples5=sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples5=colMeans(samples5)
mean(((meansamples5<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples5>qnorm(0.995,mu,sig/sqrt(50))))>0)
# z.p.val.round.true<-function(a=shp,s=scl){
#   samp<-round(rnorm(n,mu,sig),1)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
#
# ps.round.true<-replicate(100000,z.p.val.round.true())
# mean(ps.round.true<.01)
# z.p.val.true<-function(a=shp,s=scl){
#   samp<-rgamma(n,shape=a,scale=s)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
# set.seed(1234567)
# ps.true<-replicate(100000,z.p.val.true())
# mean(ps.true<.05)
samples4<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples4<-colMeans(samples4)
mean(((meansamples4<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples4>qnorm(0.995,mu,sig/sqrt(50))))>0)
mu
# z.p.val.true<-function(a=shp,s=scl){
#   samp<-rgamma(n,shape=a,scale=s)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
# set.seed(1234567)
# ps.true<-replicate(100000,z.p.val.true())
# mean(ps.true<.05)
samples4<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples4<-colMeans(samples4)
mean(((meansamples4<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples4>qnorm(0.995,mu,sig/sqrt(50))))>0)
set.seed(123456)
samples5=sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples5=colMeans(samples5)
mean(((meansamples5<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples5>qnorm(0.995,mu,sig/sqrt(50))))>0)
# z.p.val.round.true<-function(a=shp,s=scl){
#   samp<-round(rnorm(n,mu,sig),1)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
#
# ps.round.true<-replicate(100000,z.p.val.round.true())
# mean(ps.round.true<.01)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(AER)# for the data
library(ggpubr)
data("USSeatBelts")
table(USSeatBelts$year,USSeatBelts$drinkage)
dat<-USSeatBelts
dat<-pivot_wider(dat,id_cols=state,names_from = year,values_from = c(fatalities,drinkage))
dat$drinkage_1983=="no"
fatal.diff<-dat$fatalities_1983[dat$drinkage_1983=="no"]-
dat$fatalities_1988[dat$drinkage_1983=="no"]
ggqqplot(fatal.diff)
t.test(dat$fatalities_1988[dat$drinkage_1988=="yes"],
dat$fatalities_1983[dat$drinkage_1983=="no"])
t.test(dat$fatalities_1988[dat$drinkage_1988=="yes"],
dat$fatalities_1983[dat$drinkage_1983=="no"],
conf.level = .99)
fatal.diff.yes<-dat$fatalities_1983[dat$drinkage_1983=="yes"]-
dat$fatalities_1988[dat$drinkage_1983=="yes"]
mean(fatal.diff.yes)
fatal.diff.no<-dat$fatalities_1983[dat$drinkage_1983=="no"]-
dat$fatalities_1988[dat$drinkage_1983=="no"]
mean(fatal.diff.no)
t.test(dat$fatalities_1988[dat$drinkage_1988=="yes"],
dat$fatalities_1983[dat$drinkage_1983=="yes"])
set.seed(12345)
shp<-2
scl<-sqrt(4/shp)
sig<-sqrt(shp*scl^2) # sigma in 2a
mu<-shp*scl # 2*sqrt(2), mu in 2a
qs=qnorm(c(0.05,0.995),mu-1,sig/sqrt(50))
pnorm(qs[1],mu,sig/sqrt(50))+pnorm(qs[2],mu,sig/sqrt(50),
lower.tail = F)
samples=sapply(1:1e5, function(a) rnorm(50,mu,sig))
meansamples=colMeans(samples)
mean(((meansamples<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
dat.plot<-data.frame(x=c(0,3*mu))
ggplot(data=dat.plot,aes(x=x))+
stat_function(fun=dgamma, args=list(shape=shp,scale=scl))
ggqqplot(rgamma(100,shp,scl))
samples2<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples2<-colMeans(samples2)
mean(samples2)
sqrt(2)
(mu-1)
mean(((meansamples2<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples2>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
n<-50
set.seed(1234567)
ggqqplot(round(rnorm(n,mu,sig),1))
samples3<-sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples3<-colMeans(samples3)
mean(((meansamples3<qnorm(0.005,mu-1,sig/sqrt(50)))+
(meansamples3>qnorm(0.995,mu-1,sig/sqrt(50))))>0)
samples4<-sapply(1:1e5, function(a) rgamma(50,shp,scl))
meansamples4<-colMeans(samples4)
mean(((meansamples4<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples4>qnorm(0.995,mu,sig/sqrt(50))))>0)
set.seed(123456)
samples5=sapply(1:1e5, function(a) round(rnorm(50,mu,sig),1))
meansamples5=colMeans(samples5)
mean(((meansamples5<qnorm(0.005,mu,sig/sqrt(50)))+
(meansamples5>qnorm(0.995,mu,sig/sqrt(50))))>0)
# z.p.val.round.true<-function(a=shp,s=scl){
#   samp<-round(rnorm(n,mu,sig),1)
#   return(2*pnorm(-abs((mean(samp)-mu)/(sig/sqrt(n)))))
# }
#
# ps.round.true<-replicate(100000,z.p.val.round.true())
# mean(ps.round.true<.01)
library(tidyverse)
library(ggplot2)
library(HistData)
data("PolioTrials")
dat<-PolioTrials
m<-as.matrix(dat[1:2,3:4],nrow=2)
m[,1]<-m[,1]-m[,2]
chisq.test(m)
chisq.test(m, correct=FALSE)
dimnames(m)[[1]]<-c("treatment", "control")
dimnames(m)[[2]]<-c("no polio","polio")
m
model.chisq<-chisq.test(m)
model.chisq$expected
p<-sum(m[,2])/sum(m)
(P<-matrix(c(1-p,p),ncol=2))
(T<-matrix(rowSums(m),nrow=2))
(E<-T%*%P)
# check
rowSums(E)
rowSums(m)
colSums(E)
colSums(m)
(chistat<-sum((m-E)^2/E))
(chistat_adj<-sum((abs(m-E)-.5)^2/E))
x=seq(0,20,by=.1)
dat<-bind_rows(data.frame(x=x,y=dchisq(x,1),deg=1),
data.frame(x=x,y=dchisq(x,5),deg=5),
data.frame(x=x,y=dchisq(x,10),deg=10)
)
ggplot(group_by(dat,deg),aes(x=x,y=y,color=factor(deg)))+geom_line()
pchisq(chistat,df=1,lower.tail=FALSE)
chisq.test(m, correct=FALSE)
pchisq(chistat_adj,df=1,lower.tail=FALSE)
chisq.test(m)
dat<-PolioTrials
#initial setup
if(!require(DataExplorer)){install.packages("DataExplorer")}
library(DataExplorer)
if(!require(tidyr)){install.packages("tidyr")}
library(tidyr)
# Load Datasets
# Albequerque
ABQ <- read.csv("ABQ.csv", header = T)
#initial setup
if(!require(DataExplorer)){install.packages("DataExplorer")}
library(DataExplorer)
if(!require(tidyr)){install.packages("tidyr")}
library(tidyr)
# Load Datasets
# Albequerque
ABQ <- read.csv("ABQ.csv", header = T)
# Load Datasets
# Albequerque
ABQ <- read.csv("ABQ.csv")
# Load Datasets
# Albequerque
ABQ <- read.csv("ABQ.csv", header = T)
#initial setup
if(!require(DataExplorer)){install.packages("DataExplorer")}
library(DataExplorer)
if(!require(tidyr)){install.packages("tidyr")}
library(tidyr)
# Load Datasets
# Albequerque
ABQ <- read.csv("ABQ.csv", header = T)
library(tseries)
library(DataExplorer)
library(tidyverse)
library(forecast)
ABQ <- read.csv("ABQ.csv", header = T)
ABQ$SNOW[is.na(ABQ$SNOW)] <- median(ABQ$SNOW, na.rm = T)
setwd("/home/ellmann/Documents/stats/COMP4441FinalProject")
ABQ <- read.csv("ABQ.csv", header = T)
ABQ$SNOW[is.na(ABQ$SNOW)] <- median(ABQ$SNOW, na.rm = T)
ABQTEMP <- data.frame(ABQ$TMAX, ABQ$TMIN)
ind <- which(is.na(ABQ), arr.ind=TRUE)
ABQ[ind] <- round(rowMeans(ABQTEMP, na.rm=TRUE)[ind[,1]],0)
profile_missing(ABQ)
ABQ <- transform(ABQ, DATE = as.Date(DATE))
ABQ$MONTH_YEAR <- floor_date(ABQ$DATE,"month")
library(lubridate)
ABQ$MONTH_YEAR <- floor_date(ABQ$DATE,"month")
floor_date
ABQ_AGG_PRCP<- ABQ %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(value=sum(PRCP)) %>%
as.data.frame()
ABQ_AGG_SNOW<- ABQ %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(value=sum(SNOW)) %>%
as.data.frame()
ABQ_AGG_TAVG<- ABQ %>%
group_by(MONTH_YEAR)%>%
dplyr::summarize(value=mean(TAVG)) %>%
as.data.frame()
ABQ_TS_PRCP <- ts(ABQ_AGG_PRCP[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
ABQ_TS_SNOW <- ts(ABQ_AGG_SNOW[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
ABQ_TS_TAVG <- ts(ABQ_AGG_TAVG[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
adf.test(ABQ_TS_PRCP,alternative = "stationary")
adf.test(ABQ_TS_SNOW,alternative = "stationary")
adf.test(ABQ_TS_TAVG,alternative = "stationary")
adf.test(ABQ_TS_PRCP,alternative = "stationary")
adf.test(ABQ_TS_SNOW,alternative = "stationary")
adf.test(ABQ_TS_TAVG,alternative = "stationary")
model_prcp=auto.arima(ABQ_TS_PRCP)
model_snow=auto.arima(ABQ_TS_SNOW)
model_tavg=auto.arima(ABQ_TS_TAVG)
model_prcp
model_prcp=auto.arima(ABQ_TS_PRCP)
model_snow=auto.arima(ABQ_TS_SNOW)
model_tavg=auto.arima(ABQ_TS_TAVG)
forecast_prcp=forecast(model_prcp,h=60)
forecast_snow=forecast(model_snow,h=60)
forecast_tavg=forecast(model_tavg,h=60)
ABQ_TS_PRCP <- ts(ABQ_AGG_PRCP[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
ABQ_TS_SNOW <- ts(ABQ_AGG_SNOW[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
ABQ_TS_TAVG <- ts(ABQ_AGG_TAVG[, 2], start= c(1970,1), end= c(2019,12), frequency = 12)
adf.test(ABQ_TS_PRCP,alternative = "stationary")
adf.test(ABQ_TS_SNOW,alternative = "stationary")
adf.test(ABQ_TS_TAVG,alternative = "stationary")
model_prcp=auto.arima(ABQ_TS_PRCP)
model_snow=auto.arima(ABQ_TS_SNOW)
model_tavg=auto.arima(ABQ_TS_TAVG)
forecast_prcp=forecast(model_prcp,h=60)
forecast_snow=forecast(model_snow,h=60)
forecast_tavg=forecast(model_tavg,h=60)
plot(forecast_prcp,xlim=c(2010,2024))
plot(forecast_snow,xlim=c(2010,2024))
plot(forecast_tavg,xlim=c(2010,2024))
plot(forecast_prcp,xlim=c(2019,2024))
plot(forecast_snow,xlim=c(2019,2024))
plot(forecast_tavg,xlim=c(2019,2024))
plot(forecast_prcp,xlim=c(2019,2024))
plot(forecast_snow,xlim=c(2019,2024))
plot(forecast_prcp,xlim=c(2019,2024))
plot(forecast_snow,xlim=c(2019,2024))
plot(forecast_tavg,xlim=c(2019,2024))
plot(forecast_tavg,xlim=c(2015,2024))
plot(forecast_tavg,xlim=c(2019,2020))
plot(forecast_tavg,xlim=c(2019,2021))
plot(forecast_tavg,xlim=c(2019,2022))
forecast_prcp$lower
apply(forecast_prcp$lower, function(x)  ifelse(x < 0, 0, x) )
apply(forecast_prcp$lower, 2, function(x)  ifelse(x < 0, 0, x) )
forecast_prcp=forecast(model_prcp,h=60)
forecast_prcp$lower
forecast_prcp$lower
apply(forecast_prcp$lower, 2, function(x)  ifelse(x < 0, 0, x) )
plot(forecast_prcp,xlim=c(2019,2024))
apply(forecast_prcp$lower, 2, function(x)  ifelse(x < 0, 0, x) )
forecast_prcp$lower
forecast_prcp$lower
forecast_prcp$lower<-apply(forecast_prcp$lower, 2, function(x)  ifelse(x < 0, 0, x) )
forecast_prcp$lower
plot(forecast_prcp,xlim=c(2019,2024))
forecast_prcp$lower<-apply(forecast_prcp$lower, 2, function(x) ifelse(x < 0, 0, x))
forecast_snow$lower<-apply(forecast_snow$lower, 2, function(x) ifelse(x < 0, 0, x))
plot(forecast_prcp,xlim=c(2019,2024))
plot(forecast_snow,xlim=c(2019,2024))
plot(forecast_prcp,xlim=c(2000,2024))
plot(forecast_snow,xlim=c(2000,2024))
plot(forecast_tavg,xlim=c(2000,2022))
forecast_tavg=forecast(model_tavg,h=120)
forecast_prcp$lower<-apply(forecast_prcp$lower, 2, function(x) ifelse(x < 0, 0, x))
forecast_snow$lower<-apply(forecast_snow$lower, 2, function(x) ifelse(x < 0, 0, x))
plot(forecast_prcp,xlim=c(2000,2024))
plot(forecast_snow,xlim=c(2000,2024))
plot(forecast_tavg,xlim=c(2000,2022))
plot(forecast_tavg,xlim=c(2010,2030))
forecast_snow=forecast(model_snow,h=60)
forecast_prcp$lower<-apply(forecast_prcp$lower, 2, function(x) ifelse(x < 0, 0, x))
forecast_snow$lower<-apply(forecast_snow$lower, 2, function(x) ifelse(x < 0, 0, x))
plot(forecast_prcp,xlim=c(2000,2024))
plot(forecast_snow,xlim=c(2000,2024))
